set( PACKAGE_VERSION_MAJOR @CPACK_PACKAGE_VERSION_MAJOR@ )
set( PACKAGE_VERSION_MINOR @CPACK_PACKAGE_VERSION_MINOR@ )
set( PACKAGE_VERSION_PATCH @CPACK_PACKAGE_VERSION_PATCH@ )

if( PACKAGE_VERSION_PATCH )
  set( PACKAGE_VERSION "${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}.${PACKAGE_VERSION_PATCH}" )
else( PACKAGE_VERSION_PATCH )
  set( PACKAGE_VERSION "${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}" )
endif( PACKAGE_VERSION_PATCH )

if( PACKAGE_FIND_VERSION AND NOT PACKAGE_FIND_VERSION_MINOR )
  message( FATAL_ERROR "When requesting a specific version of ${PACKAGE_FIND_NAME}, you must provide at least the major and minor version numbers, e.g., 1.34")
endif( PACKAGE_FIND_VERSION AND NOT PACKAGE_FIND_VERSION_MINOR )

set( PACKAGE_VERSION_COMPATIBLE false )
set( PACKAGE_VERSION_EXACT false )
if( PACKAGE_VERSION_MAJOR EQUAL "${PACKAGE_FIND_VERSION_MAJOR}" AND PACKAGE_VERSION_MINOR EQUAL "${PACKAGE_FIND_VERSION_MINOR}")
  if( PACKAGE_FIND_VERSION_PATCH )
    if( NOT PACKAGE_VERSION_PATCH LESS "${PACKAGE_FIND_VERSION_PATCH}" )
      set( PACKAGE_VERSION_COMPATIBLE true )
      if( PACKAGE_VERSION_PATCH EQUAL ${PACKAGE_FIND_VERSION_PATCH} )
        set( PACKAGE_VERSION_EXACT true )
      endif( PACKAGE_VERSION_PATCH EQUAL ${PACKAGE_FIND_VERSION_PATCH} )
    endif( NOT PACKAGE_VERSION_PATCH LESS "${PACKAGE_FIND_VERSION_PATCH}" )
  else( PACKAGE_FIND_VERSION_PATCH )
    set( PACKAGE_VERSION_COMPATIBLE true )
    set( PACKAGE_VERSION_EXACT true )
  endif( PACKAGE_FIND_VERSION_PATCH )
endif( PACKAGE_VERSION_MAJOR EQUAL "${PACKAGE_FIND_VERSION_MAJOR}" AND PACKAGE_VERSION_MINOR EQUAL "${PACKAGE_FIND_VERSION_MINOR}")
