# Defines the following variables:
#   @PROJECT_NAME@_VERSION_MAJOR
#   @PROJECT_NAME@_VERSION_MINOR
#   @PROJECT_NAME@_VERSION_PATCH
#   @PROJECT_NAME@_VERSION
#   @PROJECT_NAME_UPPER@_BINARY_DIR
#   @PROJECT_NAME_UPPER@_DEFINITIONS
#   @PROJECT_NAME_UPPER@_INCLUDE_DIRS
#   @PROJECT_NAME_UPPER@_LIBRARIES
#   AIMS_RELATIVE_SIP_DIRECTORY
#   @PROJECT_NAME_UPPER@_USE_FILE
#   @PROJECT_NAME_UPPER@_FOUND

# Set version variables
set( @PROJECT_NAME@_VERSION_MAJOR @BRAINVISA_PACKAGE_VERSION_MAJOR@ )
set( @PROJECT_NAME@_VERSION_MINOR @BRAINVISA_PACKAGE_VERSION_MINOR@ )
set( @PROJECT_NAME@_VERSION_PATCH @BRAINVISA_PACKAGE_VERSION_PATCH@ )
set( @PROJECT_NAME@_VERSION @BRAINVISA_PACKAGE_VERSION_MAJOR@.@BRAINVISA_PACKAGE_VERSION_MINOR@.@BRAINVISA_PACKAGE_VERSION_PATCH@ )
# Set @PROJECT_NAME_UPPER@_BINARY_DIR
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )
# Set use file
set( @PROJECT_NAME_UPPER@_USE_FILE "${@PROJECT_NAME_UPPER@_BINARY_DIR}/share/@PROJECT_NAME@-@BRAINVISA_PACKAGE_VERSION_MAJOR@.@BRAINVISA_PACKAGE_VERSION_MINOR@/cmake/@PROJECT_NAME@-use.cmake" )

BRAINVISA_FIND_PACKAGE( soma-base REQUIRED )
BRAINVISA_FIND_PACKAGE( soma-io REQUIRED )
@BLITZ_FIND_PACKAGE@
find_package( LibKDTree QUIET )

find_package( python )
if( PYTHON_FOUND )
  find_package( SIP )
  find_package( Numpy )
endif( PYTHON_FOUND )

if( @DESIRED_QT_VERSION@ EQUAL 3 )
  find_package( Qt3 )
elseif( @DESIRED_QT_VERSION@ EQUAL 4 )
  find_package( Qt4 COMPONENTS QtCore QtGui )
else()
  find_package( Qt5Widgets )
  find_package( Qt5Sql )
endif()


get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )

set( AIMS_RELATIVE_SIP_DIRECTORY "@AIMS_RELATIVE_SIP_DIRECTORY@" )
set( AIMS-FREE_SIP_DIRECTORY "${@PROJECT_NAME_UPPER@_BINARY_DIR}/@AIMS_RELATIVE_SIP_DIRECTORY@" )

set( @PROJECT_NAME_UPPER@_DEFINITIONS @AIMS_DEFINITIONS@ )
set( @PROJECT_NAME_UPPER@_INCLUDE_DIRS
     "${@PROJECT_NAME_UPPER@_BINARY_DIR}/include"
     ${Sigc++2_INCLUDE_DIRS} 
     "${LIBXML2_INCLUDE_DIR}"
     ${Boost_INCLUDE_DIRS} )
if( LIBKDTREE_FOUND )
  set( @PROJECT_NAME_UPPER@_INCLUDE_DIRS
    ${@PROJECT_NAME_UPPER@_INCLUDE_DIRS}
    "${LIBKDTREE_INCLUDE_DIR}" )
endif()

set( @PROJECT_NAME_UPPER@_SIP_DIRECTORY "${@PROJECT_NAME_UPPER@_BINARY_DIR}/@AIMS_RELATIVE_SIP_DIRECTORY@" )

if( @PROJECT_NAME@_IS_BEING_COMPILED )
  set( AIMS_AIMSDATA_LIBRARY aimsdata )
  set( AIMS_AIMSDATA_0_LIBRARY aimsdata_0 )
  set( AIMS_AIMSALGO_LIBRARY aimsalgo )
  set( AIMS_PYAIMS_LIBRARY pyaims )
  set( AIMS_GRAPH_LIBRARY graph )
  set( AIMS_CARTODATA_LIBRARY cartodata )
else( @PROJECT_NAME@_IS_BEING_COMPILED )
  find_library( AIMS_AIMSDATA_LIBRARY aimsdata "${@PROJECT_NAME_UPPER@_BINARY_DIR}/lib" )
  find_library( AIMS_AIMSDATA_0_LIBRARY aimsdata_0 "${@PROJECT_NAME_UPPER@_BINARY_DIR}/lib" )
  find_library( AIMS_AIMSALGO_LIBRARY aimsalgo "${@PROJECT_NAME_UPPER@_BINARY_DIR}/lib" )
  find_library( AIMS_PYAIMS_LIBRARY pyaims "${@PROJECT_NAME_UPPER@_BINARY_DIR}/lib" )
  find_library( AIMS_GRAPH_LIBRARY graph "${@PROJECT_NAME_UPPER@_BINARY_DIR}/lib" )
  find_library( AIMS_CARTODATA_LIBRARY cartodata "${@PROJECT_NAME_UPPER@_BINARY_DIR}/lib" )
endif( @PROJECT_NAME@_IS_BEING_COMPILED )
set( AIMS_AIMSDATA_LIBRARIES "${AIMS_AIMSDATA_LIBRARY}" "${AIMS_AIMSDATA_0_LIBRARY}" ${AIMS_GRAPH_LIBRARY} ${AIMS_CARTODATA_LIBRARY} "${LIBXML2_LIBRARIES}" ${SOMA-IO_LIBRARIES} )

#message("${AIMS_AIMSDATA_LIBRARIES}")
set( @PROJECT_NAME_UPPER@_LIBRARIES ${AIMS_AIMSALGO_LIBRARY} ${AIMS_AIMSDATA_LIBRARIES} )
set( @PROJECT_NAME_UPPER@_SIP_LIBRARIES ${AIMS_PYAIMS_LIBRARY} ${AIMS_AIMSDATA_LIBRARIES} )
set( AIMS_PYAIMS_LIBRARIES "${AIMS_PYAIMS_LIBRARY}" ${AIMS_AIMSDATA_LIBRARIES} "${PYTHON_LIBRARY}" )

if( AIMS_AIMSALGO_LIB )
  set( @PROJECT_NAME_UPPER@_FOUND true )
else()
  set( @PROJECT_NAME_UPPER@_FOUND false )
endif()

if( BLITZ_FOUND )
  set( @PROJECT_NAME_UPPER@_INCLUDE_DIRS ${@PROJECT_NAME_UPPER@_INCLUDE_DIRS}
       "${BLITZ_INCLUDE_DIRS}" )
endif()
if( PYTHON_INCLUDE_PATH )
  set( @PROJECT_NAME_UPPER@_INCLUDE_DIRS ${@PROJECT_NAME_UPPER@_INCLUDE_DIRS}
       "${PYTHON_INCLUDE_PATH}" )
endif()
if( NUMPY_FOUND )
  set( @PROJECT_NAME_UPPER@_INCLUDE_DIRS ${@PROJECT_NAME_UPPER@_INCLUDE_DIRS}
       "${NUMPY_INCLUDE_DIR}" )
endif( NUMPY_FOUND )
if( SIP_FOUND )
  set( @PROJECT_NAME_UPPER@_INCLUDE_DIRS ${@PROJECT_NAME_UPPER@_INCLUDE_DIRS}
       "${SIP_INCLUDE_DIR}" )
endif( SIP_FOUND )

