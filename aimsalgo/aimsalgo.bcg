#-----------------------------------------------------------------------------
class AimsAlgoComponent( GenericMakerComponent ):
  _name = 'aimsalgo'

  optionsDescription = GenericMakerComponent.optionsDescription.copy()
  optionsDescription.update( {
    #'glut': ( None, 'configure/build commands depending on glut library ' \
      #'(default: yes)' ),
    'aimsfortran': ( None, 'configure/build commands depending on fortran ' \
      'compiler (default: yes)' ),
    } )

  
  def shareDir( self ):
    return os.path.join( 'share', 'aims-' + self.version() )


  def _libraries( self ):
    return [ 'aimsalgo', 'aimsalgopub' ]

  def __init__( self, options ):
    GenericMakerComponent.__init__( self, options )
    # Default options values
    #self.setDefaultOption( 'glut', 1 )
    self.setDefaultOption( 'aimsfortran', 1 )

  def dependencies( self ):
    return [ "aimsdata" ]

  def weakDependencies( self ):
    result = []
    #if int( self.getOption( 'glut', 0 ) ) \
      #and weakDependency( AimsGlutComponent, self ):
      #result.append( AimsGlutComponent )
    # disable fortran on MacOS 10.4 because it's not correctly installed
    if systemname != 'darwin' and int( self.getOption( 'aimsfortran', 0 ) ) \
      and weakDependency( AimsFortranComponent, self ):
      result.append( AimsFortranComponent )
    return result

#-----------------------------------------------------------------------------
class AimsGlutComponent( GenericMakerModuleComponent ):
  _name = 'aimsglut'

  def sourceName( self ):
    return 'aimsalgo'

  def dependencies( self ):
    return [ AimsAlgoComponent, GlutComponent ]

#-----------------------------------------------------------------------------
class AimsFortranComponent( GenericMakerModuleComponent ):
  _name = 'aimsfortran'

  def sourceName( self ):
    return 'aimsalgo'

  def dependencies( self ):
    return [ AimsAlgoComponent, FortranComponent ]

