if( soma-infra_FOUND )

  add_subdirectory( public )
  add_subdirectory( aimsalgo )

  #------------------------------------------------------------------------------
  # Build targets for commands by looking into directories listed in src.pro
  #------------------------------------------------------------------------------
  SOMA_GET_FILE_LIST_FROM_PRO(  ${CMAKE_CURRENT_SOURCE_DIR}/src.pro "PSUBDIRS" _commands )
  foreach( _command ${_commands} )
    file( GLOB _pro "${_command}/*.pro" )
    SOMA_GET_FILE_LIST_FROM_PRO( "${_pro}"
                                TARGET _target
                                SOURCES _proSources )
    set( _sources )
    foreach( _f ${_proSources} )
      set( _sources ${_sources} ${_command}/${_f} )
    endforeach( _f ${_proSources} )
    add_executable( ${_target} ${_sources} )
    target_link_libraries( ${_target} aimsalgo )
    SOMA_INSTALL( TARGETS ${_target}
                  DESTINATION bin
                  COMPONENT aimsalgo )
  endforeach( _command ${commands} )
  # Targets linking with aimsecat
  foreach( _command AimsFovSplit AimsSumPETFrame )
    file( GLOB _pro "${_command}/*.pro" )
    SOMA_GET_FILE_LIST_FROM_PRO( "${_pro}"
                                TARGET _target
                                SOURCES _proSources )
    set( _sources )
    foreach( _f ${_proSources} )
      set( _sources ${_sources} ${_command}/${_f} )
    endforeach( _f ${_proSources} )
    add_executable( ${_target} ${_sources} )
    target_link_libraries( ${_target} aimsalgo aimsecat )
    SOMA_INSTALL( TARGETS ${_target}
                  DESTINATION bin
                  COMPONENT aimsalgo )
  endforeach( _command AimsFovSplit AimsSumPETFrame )
  # Targets linking with aimsjpeg
  if( JPEG_FOUND )
    foreach( _command AimsData2Jpeg )
      file( GLOB _pro "${_command}/*.pro" )
      SOMA_GET_FILE_LIST_FROM_PRO( "${_pro}"
                                  TARGET _target
                                  SOURCES _proSources )
      set( _sources )
      foreach( _f ${_proSources} )
        set( _sources ${_sources} ${_command}/${_f} )
      endforeach( _f ${_proSources} )
      add_executable( ${_target} ${_sources} )
      target_link_libraries( ${_target} aimsalgo aimsjpeg )
      SOMA_INSTALL( TARGETS ${_target}
                    DESTINATION bin
                    COMPONENT aimsalgo )
    endforeach( _command AimsData2Jpeg )
  endif( JPEG_FOUND )
  # Targets linking with aimsdicom
  if( DCMTK_FOUND )
    include_directories( ${DCMTK_INCLUDE_DIR} )
    foreach( _command AimsSiemensEPI2Volume )
      file( GLOB _pro "${_command}/*.pro" )
      SOMA_GET_FILE_LIST_FROM_PRO( "${_pro}"
                                  TARGET _target
                                  SOURCES _proSources )
      set( _sources )
      foreach( _f ${_proSources} )
        set( _sources ${_sources} ${_command}/${_f} )
      endforeach( _f ${_proSources} )
      add_executable( ${_target} ${_sources} )
      target_link_libraries( ${_target} aimsalgo aimsdicom )
      SOMA_INSTALL( TARGETS ${_target}
                    DESTINATION bin
                    COMPONENT aimsalgo )
    endforeach( _command AimsData2Jpeg )
  endif( DCMTK_FOUND )

else( soma-infra_FOUND )

  ADD_SUBDIRECTORY(public)
  ADD_SUBDIRECTORY(aimsalgo)
  
  
  ADD_SUBDIRECTORY(Aims3DPointCloud)
  ADD_SUBDIRECTORY(AimsActivPixel2Volume)
  ADD_SUBDIRECTORY(AimsAddNoise2Data)
  ADD_SUBDIRECTORY(AimsApplyVectorField)
  ADD_SUBDIRECTORY(AimsB1MapSensitivity)
  ADD_SUBDIRECTORY(AimsBuildDti)
  ADD_SUBDIRECTORY(AimsBuildIndex)
  ADD_SUBDIRECTORY(AimsBvalue)
  ADD_SUBDIRECTORY(AimsChamferDistanceMap)
  ADD_SUBDIRECTORY(AimsClosing)
  ADD_SUBDIRECTORY(AimsClusterArg)
  ADD_SUBDIRECTORY(AimsCompareSPMtToPrimalSketch)
  ADD_SUBDIRECTORY(AimsConvexHull)
  ADD_SUBDIRECTORY(AimsCorrectionEpi)
  ADD_SUBDIRECTORY(AimsCreateTexture)
  ADD_SUBDIRECTORY(AimsCurvature2d)
  ADD_SUBDIRECTORY(AimsCurvature3d)
  ADD_SUBDIRECTORY(AimsCylinder)
  ADD_SUBDIRECTORY(AimsDanielssonDistanceMap)
  
  
  IF(JPEG_FOUND)
    ADD_SUBDIRECTORY(AimsData2Jpeg)
  ENDIF(JPEG_FOUND)
  
  
  ADD_SUBDIRECTORY(AimsDilation)
  ADD_SUBDIRECTORY(AimsDistordDti)
  ADD_SUBDIRECTORY(AimsDivide)
  ADD_SUBDIRECTORY(AimsDtiBck2Vol)
  ADD_SUBDIRECTORY(AimsErosion)
  ADD_SUBDIRECTORY(AimsFoldArgAtt)
  ADD_SUBDIRECTORY(AimsFovSplit)
  ADD_SUBDIRECTORY(AimsFrontDistanceMap)
  ADD_SUBDIRECTORY(AimsGTMDump)
  ADD_SUBDIRECTORY(AimsGaussianSmoothing)
  ADD_SUBDIRECTORY(AimsGaussianSmoothing1d)
  ADD_SUBDIRECTORY(AimsGraphMesh)
  ADD_SUBDIRECTORY(AimsGraphTransferLabels)
  ADD_SUBDIRECTORY(AimsHJEvolution2d)
  ADD_SUBDIRECTORY(AimsHJEvolution3d)
  ADD_SUBDIRECTORY(AimsHippocampicReferential)
  ADD_SUBDIRECTORY(AimsIcmSpaghetti)
  ADD_SUBDIRECTORY(AimsIcmSpaghettiN)
  ADD_SUBDIRECTORY(AimsIcosaList)
  ADD_SUBDIRECTORY(AimsImageGLBlobStats)
  ADD_SUBDIRECTORY(AimsImagePrimalSketch)
  ADD_SUBDIRECTORY(AimsImageScaleSpace)
  ADD_SUBDIRECTORY(AimsImageSmoothing)
  ADD_SUBDIRECTORY(AimsInflate)
  ADD_SUBDIRECTORY(AimsKMeans)
  ADD_SUBDIRECTORY(AimsKMeansImageSegmentation)
  ADD_SUBDIRECTORY(AimsLMAVoiStat)
  ADD_SUBDIRECTORY(AimsLZHCompress)
  ADD_SUBDIRECTORY(AimsLightenAtlas)
  ADD_SUBDIRECTORY(AimsLinearComb)
  # ADD_SUBDIRECTORY(AimsMIBucketRegister) # -> not in src.pro
  ADD_SUBDIRECTORY(AimsManualBiasCorrection)
  ADD_SUBDIRECTORY(AimsMask)
  ADD_SUBDIRECTORY(AimsMaskPhantom)
  ADD_SUBDIRECTORY(AimsMeanCurvFlow)
  ADD_SUBDIRECTORY(AimsMedianSmoothing)
  ADD_SUBDIRECTORY(AimsMerge)
  ADD_SUBDIRECTORY(AimsMesh)
  ADD_SUBDIRECTORY(AimsMesh2Ascii)
  ADD_SUBDIRECTORY(AimsMesh2SSGraph)
  ADD_SUBDIRECTORY(AimsMesh2Sphere)
  ADD_SUBDIRECTORY(AimsMeshAverage)
  ADD_SUBDIRECTORY(AimsMeshBlobExtract)
  ADD_SUBDIRECTORY(AimsMeshBrain)
  ADD_SUBDIRECTORY(AimsMeshCC2Arg)
  # ADD_SUBDIRECTORY(AimsMeshCloseSulci) # -> not in src.pro
  ADD_SUBDIRECTORY(AimsMeshConnectedComp)
  ADD_SUBDIRECTORY(AimsMeshCurvature)
  ADD_SUBDIRECTORY(AimsMeshDecimation)
  ADD_SUBDIRECTORY(AimsMeshDistance)
  ADD_SUBDIRECTORY(AimsMeshGeodesicDepth)
  ADD_SUBDIRECTORY(AimsMeshLineMeasurement)
  ADD_SUBDIRECTORY(AimsMeshMni2Mesh)
  ADD_SUBDIRECTORY(AimsMeshParcellation2VolumeParcellation)
  ADD_SUBDIRECTORY(AimsMeshPlane)
  ADD_SUBDIRECTORY(AimsMeshSmoothing)
  ADD_SUBDIRECTORY(AimsMeshWhite)
  ADD_SUBDIRECTORY(AimsMixtureOfPpcaForRats)
  ADD_SUBDIRECTORY(AimsMoment)
  ADD_SUBDIRECTORY(AimsMorphoMath)
  ADD_SUBDIRECTORY(AimsMultiply)
  ADD_SUBDIRECTORY(AimsNormDiff)
  ADD_SUBDIRECTORY(AimsNormWithRegion)
  ADD_SUBDIRECTORY(AimsOpening)
  ADD_SUBDIRECTORY(AimsPCAfilter)
  ADD_SUBDIRECTORY(AimsPCAloc)
  ADD_SUBDIRECTORY(AimsPCAloc2)
  ADD_SUBDIRECTORY(AimsParamCorrectDti)
  ADD_SUBDIRECTORY(AimsParameterize2DImageDomain)
  ADD_SUBDIRECTORY(AimsPcaRegionGrowth)
  ADD_SUBDIRECTORY(AimsPowerComb)
  ADD_SUBDIRECTORY(AimsRefineMesh)
  # ADD_SUBDIRECTORY(AimsRegisterStriataMainLines)
  # ADD_SUBDIRECTORY(AimsRelax)
  ADD_SUBDIRECTORY(AimsRelaxInit)
  ADD_SUBDIRECTORY(AimsReplaceLevel)
  ADD_SUBDIRECTORY(AimsResample)
  ADD_SUBDIRECTORY(AimsSNR)
  ADD_SUBDIRECTORY(AimsSegmentsToMesh)
  
  
  IF(DCMTK_FOUND)
    ADD_SUBDIRECTORY(AimsSiemensEPI2Volume)
  ENDIF(DCMTK_FOUND)
  
  ADD_SUBDIRECTORY(AimsSimilarComponentAnalysisSegmentation)
  ADD_SUBDIRECTORY(AimsSlice2Bucket)
  ADD_SUBDIRECTORY(AimsSmoothing)
  ADD_SUBDIRECTORY(AimsSpaghettiModel)
  ADD_SUBDIRECTORY(AimsSphereDistribution)
  ADD_SUBDIRECTORY(AimsSplitArray)
  ADD_SUBDIRECTORY(AimsSubSampling)
  ADD_SUBDIRECTORY(AimsSubTensor)
  ADD_SUBDIRECTORY(AimsSulcusSPAM)
  ADD_SUBDIRECTORY(AimsSumFrame)
  ADD_SUBDIRECTORY(AimsSumPETFrame)
  ADD_SUBDIRECTORY(AimsSwapEndian)
  ADD_SUBDIRECTORY(AimsT2BasedCorrectionEpi)
  ADD_SUBDIRECTORY(AimsTMStarget)
  ADD_SUBDIRECTORY(AimsTalairachTransform)
  ADD_SUBDIRECTORY(AimsTensor2Bucket)
  ADD_SUBDIRECTORY(AimsTensorExtract)
  ADD_SUBDIRECTORY(AimsTensorSNR)
  ADD_SUBDIRECTORY(AimsTexture2Primal)
  ADD_SUBDIRECTORY(AimsTextureAverage)
  ADD_SUBDIRECTORY(AimsTextureDerivative)
  ADD_SUBDIRECTORY(AimsTextureDilation)
  ADD_SUBDIRECTORY(AimsTextureErosion)
  ADD_SUBDIRECTORY(AimsTexturePrimalSketch)
  ADD_SUBDIRECTORY(AimsTextureRegularize)
  ADD_SUBDIRECTORY(AimsTextureScaleSpace)
  ADD_SUBDIRECTORY(AimsTextureSmoothing)
  ADD_SUBDIRECTORY(AimsTextureThreshold)
  ADD_SUBDIRECTORY(AimsTextureVoronoi)
  ADD_SUBDIRECTORY(AimsTopologicalClassification)
  ADD_SUBDIRECTORY(AimsVFilter)
  ADD_SUBDIRECTORY(AimsValidateFit)
  ADD_SUBDIRECTORY(AimsVeinExtraction)
  ADD_SUBDIRECTORY(AimsVoronoi)
  ADD_SUBDIRECTORY(AimsZCat)

endif( soma-infra_FOUND )
